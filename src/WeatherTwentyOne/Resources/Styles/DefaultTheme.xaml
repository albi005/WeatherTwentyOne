<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:WeatherTwentyOne.Resources.Styles"
    x:Class="WeatherTwentyOne.Resources.Styles.DefaultTheme"
    xmlns:android="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific;assembly=Microsoft.Maui.Controls">
    <Color x:Key="Primary" />
    <Color x:Key="PrimaryContainer" />
    <Color x:Key="Secondary" />
    <Color x:Key="SecondaryContainer" />
    <Color x:Key="Tertiary" />
    <Color x:Key="TertiaryContainer" />
    <Color x:Key="Surface" />
    <Color x:Key="SurfaceVariant" />
    <Color x:Key="Background" />
    <Color x:Key="Error" />
    <Color x:Key="ErrorContainer" />
    <Color x:Key="OnPrimary" />
    <Color x:Key="OnPrimaryContainer" />
    <Color x:Key="OnSecondary" />
    <Color x:Key="OnSecondaryContainer" />
    <Color x:Key="OnTertiary" />
    <Color x:Key="OnTertiaryContainer" />
    <Color x:Key="OnSurface" />
    <Color x:Key="OnSurfaceVariant" />
    <Color x:Key="OnError" />
    <Color x:Key="OnErrorContainer" />
    <Color x:Key="OnBackground" />
    <Color x:Key="Outline" />
    <Color x:Key="Shadow" />
    <Color x:Key="InverseSurface" />
    <Color x:Key="InverseOnSurface" />
    <Color x:Key="InversePrimary" />
    <Color x:Key="Surface1" />
    <Color x:Key="Surface2" />
    <Color x:Key="Surface3" />
    <Color x:Key="Surface4" />
    <Color x:Key="Surface5" />
    <SolidColorBrush x:Key="PrimaryBrush" />
    <SolidColorBrush x:Key="PrimaryContainerBrush" />
    <SolidColorBrush x:Key="SecondaryBrush" />
    <SolidColorBrush x:Key="SecondaryContainerBrush" />
    <SolidColorBrush x:Key="TertiaryBrush" />
    <SolidColorBrush x:Key="TertiaryContainerBrush" />
    <SolidColorBrush x:Key="SurfaceBrush" />
    <SolidColorBrush x:Key="SurfaceVariantBrush" />
    <SolidColorBrush x:Key="BackgroundBrush" />
    <SolidColorBrush x:Key="ErrorBrush" />
    <SolidColorBrush x:Key="ErrorContainerBrush" />
    <SolidColorBrush x:Key="OnPrimaryBrush" />
    <SolidColorBrush x:Key="OnPrimaryContainerBrush" />
    <SolidColorBrush x:Key="OnSecondaryBrush" />
    <SolidColorBrush x:Key="OnSecondaryContainerBrush" />
    <SolidColorBrush x:Key="OnTertiaryBrush" />
    <SolidColorBrush x:Key="OnTertiaryContainerBrush" />
    <SolidColorBrush x:Key="OnSurfaceBrush" />
    <SolidColorBrush x:Key="OnSurfaceVariantBrush" />
    <SolidColorBrush x:Key="OnErrorBrush" />
    <SolidColorBrush x:Key="OnErrorContainerBrush" />
    <SolidColorBrush x:Key="OnBackgroundBrush" />
    <SolidColorBrush x:Key="OutlineBrush" />
    <SolidColorBrush x:Key="ShadowBrush" />
    <SolidColorBrush x:Key="InverseSurfaceBrush" />
    <SolidColorBrush x:Key="InverseOnSurfaceBrush" />
    <SolidColorBrush x:Key="InversePrimaryBrush" />
    <SolidColorBrush x:Key="Surface1Brush" />
    <SolidColorBrush x:Key="Surface2Brush" />
    <SolidColorBrush x:Key="Surface3Brush" />
    <SolidColorBrush x:Key="Surface4Brush" />
    <SolidColorBrush x:Key="Surface5Brush" />

    <FontImageSource
        x:Key="SearchIcon"
        FontFamily="FontAwesome"
        Glyph="{x:Static app:IconFont.Search}"
        Color="Yellow"
        Size="16" />

    <!--  SHELL  -->
    <Style x:Key="BaseStyle" TargetType="Element">
        <Setter Property="Shell.FlyoutBackgroundColor" Value="Blue" />
        <Setter Property="Shell.BackgroundColor" Value="{DynamicResource Surface2}" />
        <Setter Property="Shell.ForegroundColor" Value="Red" />
        <Setter Property="Shell.TitleColor" Value="{DynamicResource OnSurface}" />
        <Setter Property="Shell.NavBarHasShadow" Value="False" />

    </Style>

    <Style
        BasedOn="{StaticResource BaseStyle}"
        ApplyToDerivedTypes="True"
        TargetType="ShellItem" />

    <Style TargetType="TabBar">
        <Setter Property="Shell.TabBarBackgroundColor" Value="{DynamicResource Surface2}" />
        <Setter Property="Shell.TabBarTitleColor" Value="{DynamicResource OnSurface}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="Blue" />
        <Setter Property="Shell.TabBarForegroundColor" Value="Red" />
    </Style>

    <Style TargetType="Page" ApplyToDerivedTypes="True">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BackgroundColor" Value="{DynamicResource Background}" />
    </Style>

    <Style TargetType="NavigationPage" ApplyToDerivedTypes="True">
        <Setter Property="BackgroundColor" Value="{DynamicResource Background}" />
        <Setter Property="BarBackgroundColor" Value="{DynamicResource Surface2}" />
        <Setter Property="BarTextColor" Value="{DynamicResource OnSurface}" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
    </Style>
    <Style TargetType="Label" Class="LargeTitle">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
    </Style>
    <Style TargetType="Label" Class="SectionTitle">
        <Setter Property="FontSize" Value="27" />
        <Setter Property="TextColor" Value="{DynamicResource Primary}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
    </Style>
    <Style TargetType="Label" Class="Title1">
        <Setter Property="FontSize" Value="26" />
        <Setter Property="FontFamily" Value="OpenSansSemiBold" />
    </Style>
    <Style TargetType="Label" Class="Headline">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontFamily" Value="OpenSansSemiBold" />
    </Style>
    <Style TargetType="Label" Class="Subhead">
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style TargetType="Label" Class="SubContent">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextColor" Value="{DynamicResource OnSurfaceVariant}" />
    </Style>
    <Style TargetType="Label" Class="Footnote">
        <Setter Property="FontSize" Value="13" />
    </Style>
    <Style TargetType="Label" Class="Small">
        <Setter Property="FontSize" Value="10" />
    </Style>

    <!--  Text Color Styles  -->
    <Style TargetType="Label" Class="Secondary">
        <Setter Property="TextColor" Value="{DynamicResource Secondary}" />
    </Style>
    <Style TargetType="Label" Class="Primary">
        <Setter Property="TextColor" Value="{DynamicResource Primary}" />
    </Style>
    <Style TargetType="Label" Class="Error">
        <Setter Property="TextColor" Value="{DynamicResource Error}" />
    </Style>
    <Style TargetType="Label" Class="Warning">
        <Setter Property="TextColor" Value="{DynamicResource OnErrorContainer}" />
    </Style>
    <Style TargetType="Label" Class="Disabled">
        <Setter Property="TextColor" Value="{DynamicResource OnSurfaceVariant}" />
    </Style>

    <FontImageSource
        x:Key="CircleIcon"
        FontFamily="FontAwesome"
        Glyph="{x:Static app:IconFont.DotCircle}"
        Color="{StaticResource SurfaceVariant}"
        Size="16" />

    <FontImageSource
        x:Key="CircleIconDisabled"
        FontFamily="FontAwesome"
        Glyph="{x:Static app:IconFont.DotCircle}"
        Color="{DynamicResource SurfaceVariant}"
        Size="16" />

    <FontImageSource
        x:Key="CircleIconAlt"
        FontFamily="FontAwesome"
        Glyph="{x:Static app:IconFont.DotCircle}"
        Color="{DynamicResource Primary}"
        Size="16" />
    <FontImageSource
        x:Key="CircleIconAltDisabled"
        FontFamily="FontAwesome"
        Glyph="{x:Static app:IconFont.DotCircle}"
        Color="{DynamicResource Neutral}"
        Size="16" />

    <Style TargetType="Button">
        <Setter Property="TextColor" Value="{DynamicResource OnPrimary}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="14,10" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource Primary}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceVariant}" />
                            <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PrimaryButtonOutline">
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{DynamicResource Primary}" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="BorderColor" Value="{DynamicResource Primary}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="BorderColor" Value="{DynamicResource Outline}" />
                            <Setter Property="TextColor" Value="{DynamicResource OnSurfaceVariant}" />
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
        TargetType="Button"
        x:Key="PrimaryButtonOutlineIcon"
        BasedOn="{StaticResource PrimaryButtonOutline}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ImageSource" Value="{StaticResource CircleIconAltDisabled}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
        TargetType="Button"
        x:Key="SecondaryButtonOutline"
        BasedOn="{StaticResource PrimaryButtonOutline}">
        <Setter Property="Padding" Value="4" />
    </Style>
    <Style
        TargetType="Button"
        x:Key="TertiaryButtonOutline"
        BasedOn="{StaticResource PrimaryButtonOutline}" />
    <Style TargetType="Button" x:Key="BorderlessButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextColor" Value="{DynamicResource Primary}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource OnSurfaceVariant}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="android:ImageButton.ShadowColor" Value="Transparent" />
    </Style>

    <Style TargetType="StackLayout" Class="CheckBoxContainer">
        <Setter Property="Spacing" Value="0" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <Style TargetType="StackLayout" Class="SwitchContainer">
        <Setter Property="Spacing" Value="0" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <Style TargetType="ScrollView">
        <Setter Property="VerticalScrollBarVisibility" Value="Never" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Never" />
    </Style>

    <!--  Misc  -->
    <Style TargetType="BoxView">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>
    <Style Class="HRule" TargetType="BoxView">
        <Setter Property="HeightRequest" Value="1" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceVariant}" />
    </Style>

    <!-- <x:String x:Key="LineBreak">&#x0a;</x:String> -->

    <!--  data templates  -->
    <DataTemplate x:Key="WeatherWidgetTemplate">
        <Frame
            HorizontalOptions="Start"
            HeightRequest="164"
            WidthRequest="164"
            Padding="0"
            CornerRadius="20"
            HasShadow="False"
            BackgroundColor="{StaticResource Background_Mid}">
            <Grid
                HeightRequest="144"
                WidthRequest="144"
                Padding="20">
                <Image
                    Source="{Binding .}"
                    VerticalOptions="Start"
                    HorizontalOptions="End" />

                <StackLayout
                    HorizontalOptions="Start"
                    Spacing="0"
                    VerticalOptions="End">
                    <Label Text="2%" class="LargeTitle" />
                    <Label Text="From" class="Subhead" />
                    <Label Text="Pond Elementary" class="SubContent" />
                </StackLayout>
            </Grid>
        </Frame>
    </DataTemplate>
</ResourceDictionary>